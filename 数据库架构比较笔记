：SMP硬件上的关系数据库
自20世纪80年代初以来，市场一直由甲骨文，微软和IBM主导，他们提供了旨在满足上述要求的通用解决方案。底层硬件和数据库系统架构最初是在20世纪70年代开
发的，它基于对称多处理（SMP）硬件，其中许多物理处理器（或核心）使用共享内存和磁盘执行指令。

上面的屏幕截图显示了Windows任务管理器，它显示了八个处理器在SMP数据库服务器上执行指令。基于SMP的数据库解决方案具有以下优点和缺点：

优点
它的工作原理：它是一种经过战斗强化，经过验证的架构，部署成本相对较低，可以运行从大型服务器到中型商用硬件的各种设备。它在提供合理的性能和吞吐量方
面拥有良好的记录。
它是同构的：这意味着为这个平台设计的数据库几乎可以在任何硬件上运行。由于它基于多个核心，因此可以是物理或逻辑，也可以是在云平台上的虚拟服务器上运
行的选项。
数据一致性：下图说明了此体系结构的基本特性 - 连接到本地或网络连接磁盘的单台计算机。实际上，有一份数据副本，因此数据一致性不是挑战; 它在分布式系统
上。这与许多NoSQL解决方案相比较，在这些解决方案中，数据不一致的风险以最大响应时间进行交易。
缺点
虽然这是一种流行且广泛部署的架构，但它确实存在以下缺点：

难以扩展：虽然可以添加CPU，内存或其他磁盘，但实际上可扩展性有限，并且很可能在几年内需要用更大的机器替换系统。
最大大小：由于扩展难度大，因此大多数架构师将SMP平台的大小调整为最大预测工作负载。这意味着支付比最初需要的更多的处理能力，而随着时间的推移，随着更多
负载的增加，性能逐渐降低。更好的解决方案将允许随着时间的推移逐步添加计算资源。
低效缩放：添加额外或更快的CPU很少会提高线性规模的性能。例如，除非系统完全受CPU限制，否则添加速度提高100％的处理器的性能将提高一倍。在大多数情况下，
瓶颈转移到另一个组件，并且不可能线性增加容量。
工作负载管理：根据数据库解决方案和硬件，基于SMP的系统可以提供合理的性能或吞吐量 - 很少同时提供。与MPP平台一样，许多解决方案都在努力平衡快速响应时间
和高批量吞吐量的竞争需求。下图说明了一种常见方法，即面向客户的在线事务处理（OLTP）系统可提供快速响应时间，同时定期将数据传送到用于联机分析处理
（OLAP）的单独数据仓库平台。虽然Oracle声称要解决在内存中使用Oracle12c组合OLTP和OLAP的挑战，但实际上，这是有限的中小型应用程序。
弹性和可用性：由于SMP系统使用单一平台，因此需要扩展该解决方案，以便在组件或整个数据中心发生故障时提供弹性。这通常会使这个选项变得昂贵，尽管（理论上）
它可以部署在廉价的商用服务器上，实际上，它通常部署在具有双冗余磁盘，网络连接和电源的企业级硬件上。虽然这为组件故障提供了弹性，但该解决方案还需要一个
单独的备用系统来保证高可用性。
选项2：MPP硬件上的关系数据库
1984年，Teradata使用大规模并行处理（MPP）架构交付了第一个生产数据库，两年后，福布斯杂志将Teradata命名为“年度产品”，因为它生产了第一个TB级生产数据
库。此架构后来被Netezza，Microsoft并行数据仓库（PDW）和HP Vertica等采用。如今，Apple，Walmart和eBay 经常在MPP平台上存储和处理数 PB的数据。

下图提供了MPP体系结构的图示，其中协调SMP服务器接受用户SQL语句，这些语句分布在多个独立运行的数据库服务器上，这些服务器一起作为单个集群机器运行。每个
节点都是一台独立的计算机，具有自己的CPU，内存和直接连接的磁盘。

使用此解决方案，在加载数据时，可以使用一致的散列算法来均匀地分布数据，这些（如果一切顺利）将导致跨集群的工作的均衡分布。MPP体系结构是数据仓库和分析
平台的出色解决方案，因为查询可以分解为组件部分，并在服务器之间并行执行，从而显着提高性能。

但是，与SMP系统不同，数据放置在磁盘级别是自动进行的，因此最大限度地提高吞吐量和响应时间至关重要。下图说明了可用的三种MPP数据分配方法。

选项包括：

复制：通常用于相对较小的表，使用此方法，数据在群集中的每个节点上都会重复。虽然这看起来很浪费，但我自己在几个多TB的仓库上经验表明，通常会有大量的小型
参考和维度表，这些表通常与一个大得多的事务或事实表相结合。此参考数据非常适合复制方法，因为它意味着它可以在群集中的每个节点上本地和并行连接，从而避免
节点之间的数据混洗。
一致哈希：通常用于较大的事务或事实表，并涉及生成可重现的密钥以将每行分配给群集中的适当服务器。此方法可确保群集上的均匀负载，但不正确选择群集密钥可能
会导致热点，这在某些情况下可能会显着限制性能。
循环：此方法涉及以循环方式依次编写下一个节点上的每一行，并且通常仅用于临时登台表，这些表将仅被写入和读取一次。它的优点是保证数据均匀分布，因此同样可
以查询负载，但除非所有相关的参考数据表都复制到每个节点，否则这是一个很差的解决方案。
优点
与SMP解决方案相比，MPP架构具有几个明显的优势，其中包括：

性能：这是MPP系统真正擅长的领域。提供的数据和处理可以在群集中的节点之间并行地均匀执行，即使是最大的SMP服务器，性能也会显着增加。
“通过大规模并行处理（MPP）设计，查询通常比在对称多处理（SMP）系统上构建的传统数据仓库快50倍”。-微软公司。

可伸缩性和并发性：与SMP解决方案不同，基于MPP的系统可以选择逐步添加计算和存储资源，并且吞吐量大大提高了算术速率。添加额外的相同大小的节点可以提高系
统处理其他查询的能力，而不会显着降低性能。
成本和高可用性：一些基于MPP的数据仓库解决方案旨在在廉价的商用硬件上运行，而无需可能包含成本的企业级双冗余组件。这些解决方案通常使用自动数据复制来提
高系统弹性并确保高可用性。这可以非常有效地利用资源，并且避免了许多基于SMP的解决方案所使用的大量未使用的热备用的成本。
读写吞吐量：当数据分布在整个系统中时，该解决方案可以实现非常高的吞吐量，因为读写操作可以在集群中的独立节点上并行执行。
缺点
虽然MPP系统比传统的SMP架构具有引人注目的优势，但它们确实存在以下缺点：

复杂性和成本：虽然表面上的架构看起来很简单，但精心设计的MPP解决方案隐藏了大量复杂性，Teradata和Netezza最早的商用MPP数据库系统作为硬件设备以极高的
成本交付。但是，随着这种架构在大型分析平台上越来越受欢迎，价格开始变得缓和。
数据分布至关重要：与磁盘级数据放置简单且可自动化的SMP解决方案不同，MPP平台需要仔细设计数据分布，以避免数据偏差导致处理热点。例如，如果选择了差的分
发密钥，这可能导致少量节点过载而其他节点闲置，这将限制整体吞吐量和查询响应时间。同样，如果未使用关联的事务数据正确放置引用表，则可能导致过多的数据
重排从而在节点之间传输数据以完成连接操作，这又可能导致性能问题。这在下图中说明，其中参考数据在两个节点之间混洗。虽然可以解决问题，但通常需要大量的
数据重组工作，以及潜在的系统停机时间。
需要停机：虽然一些MPP解决方案具有内置的弹性和高可用性，但许多需要停机或降低性能以支持添加新节点。在某些情况下，必须使整个群集脱机以添加其他节点，即
使不需要这些节点，添加节点通常也涉及跨群集重新分发数据以利用其他计算资源。对于某些客户而言，这可能不是理想的甚至是可行的选择。
缺乏弹性：尽管可以扩展MPP系统，但这通常涉及新硬件的调试和部署，这可能需要数天甚至数周才能完成。这些系统通常不支持弹性 - 根据需要扩展或减少计算资源
以满足实时处理要求的能力。
仅横向扩展：为了避免系统不平衡，通常只有添加完全相同规格，计算能力和磁盘存储的节点才是明智的。这意味着，尽管添加其他节点会增加并发性（其他用户查询
数据的能力），但不可能显着增加批量吞吐量。简而言之，虽然可以扩展，但很少有选项可以将解决方案扩展到功能更强大的系统。
潜在的容量：理论上，MPP系统是完美平衡的，因为额外的节点将存储和计算资源添加到集群。但是，由于存储需求超出了对计算容量的需求，因此存储需求超出计算
容量需求，因此每TB的成本不成比例地增加，所以总拥有成本可能会很高。这在Data Lake解决方案的普及中尤其普遍，它可能存储大量不经常访问的数据。总之，使
用纯MPP解决方案，您可以支付比实际需要多300倍的计算处理。
“在分析MPP平台上，数据量[可以]不成比例地增长到分析工作负载（我们的研究显示在某些情况下差异高达300：1）” - Tripp Smith，CTO Clarity Insights。

选项3：使用SQL over HDFS的Hadoop
下图说明了2010 - 15年间对大数据的兴趣不可避免的增长。这显然涉及数据库供应商，包括成为Hadoop平台供应商的IBM 和开发大数据设备的 Oracle 。

在此期间，关于数据仓库是否已经死亡以及Hadoop是否会取代 MPP平台的讨论很多，尽管普遍的共识似乎表明Hadoop充其量只是数据仓库的补充技术; 不是它的替代品。

什么是Hadoop？
与MySQL和PostgreSQL（开源数据库）不同，Hadoop不是单一产品，而是相关项目的开源生态系统。截至2018年9月，这包括150多个项目  ，其中包含12个用于
SQL over Hadoop和17个数据库的独立工具。为了说明生态系统的规模，亚马逊英国出售了超过1,000种不同的Hadoop技术书籍，其中许多只涉及一个工具，包括
超过750页的Hadoop The Definitive Guide。

下图说明了一些关键组件和Hadoop分发器，每个组件都需要在时间和专业知识方面进行大量投资才能充分利用。

主要用例
Hadoop是一个庞大的主题，很难在一篇简短的文章中总结，但它解决的主要问题包括：

大容量数据存储和批处理： Hadoop和主数据存储系统（Hadoop分布式文件系统 - HDFS）通常被推广为廉价的数据存储解决方案和Data Lake的合适平台。鉴于它
能够扩展到数千个节点，它可能非常适合使用基于SQL的Apache Hive over HDFS 进行大规模批量数据处理。
实时处理：虽然HDFS最适合运行数小时的大批量流程，但其他组件（包括Kafka，Spark Streaming，Storm和Flink）专门设计用于提供微批量或实时流式传输解
决方案。随着物联网（IoT）行业越来越多地提供数百万需要实时或接近实时数据分析和响应的嵌入式传感器的实时结果，预计这将变得越来越重要。
文本挖掘和分析： Hadoop平台强大的另一个领域是它能够处理包括文本在内的非结构化数据。虽然传统数据库适用于行和列中的结构化数据，但Hadoop包含用于
分析非结构化文本字段含义的工具，例如，在线产品评论或可以挖掘用于情绪分析的Twitter订阅源。
上述用例通常被描述为Three V's：DataVolume，Velocity和Variety。

Hadoop / HDFS架构
作为本文关于数据库体系结构的重点，我将重点介绍批处理用例。在我的文章Big Data: Velocity in Plain English中单独描述了一种潜在的实时处理架构。

在第一印象中，Hadoop / HDFS架构似乎与MPP架构类似，下图说明了相似性。

上图显示了如何使用SQL正常处理数据。的名称服务器充当目录查找服务给客户端指向时将被存储或从查询的数据的节点（S），否则，它看起来非常类似于一个
MPP架构。

然而，最大的单一差异是，虽然MPP平台在群集中分配单个行，但Hadoop只是将数据分成任意块， Cloudera建议将其大小调整为128Mb，然后将其复制到至少两
个其他节点以恢复弹性如果节点发生故障。

这很重要，因为它意味着小文件（任何小于128Mb）完全保存在一个节点上，甚至一个千兆字节大小的文件也只分布在8个节点（加上副本）上。这很重要，因为
Hadoop旨在处理非常大的数据集和大型集群。但是，由于小表分布在较少的服务器上，因此对于小于50-100Gb的数据文件来说并不理想。

处理小数据集对Hadoop来说是一个挑战，因为在更糟糕的情况下，单个节点上的处理数据完全按顺序运行，没有任何并行运行。实际上，由于许多Hadoop集群倾
向于使用大量相对较慢且廉价的商用服务器，因此小数据的性能确实很差。此外，随着小文件数量的增加，名称服务器的管理也越来越成为问题。

为了说明这一点，我的经验表明，在大多数中档数据仓库平台（大约10Tb数据）上，只有大约10％的表保存超过100Gb的数据，70％的表保持不到1Gb。即使两个
最大的表超过1Tb，这些也不适合在Hadoop上部署。

“大多数希望Hadoop取代他们的企业数据仓库的人都非常失望” - 詹姆斯塞拉 - 微软

优点
Hadoop / HDFS架构作为数据存储和处理平台具有以下优势：

批处理性能： Hadoop是处理非常大的数据集时实现高吞吐量的绝佳选择，尽管处理使用需要并行执行多个节点的作业的强力方法。
可扩展性：与MPP系统类似，可以添加额外的节点来扩展Hadoop集群，集群可以达到最多。在某些情况下有5,000个节点。
可用性和弹性：随着数据自动复制（复制）到多个服务器，弹性和高可用性都是透明的并且内置。这意味着（例如），生产中可以使节点脱机进行维护而不会中断服务。
成本（硬件和许可证）：由于Hadoop倾向于部署在运行开源软件的廉价商用服务器上，因此硬件和许可证的成本可能远低于传统的企业级数据仓库设备和相关的
许可证成本。
缺点
由于具有令人信服的成本和批处理性能优势，Hadoop通常被提升为数据仓库的替代品。但是，我建议谨慎，原因如下：

管理复杂性：如上所述，Hadoop不是单一产品，而是一个庞大的软件生态系统，部署通常需要熟练掌握一系列工具，包括HDFS，Yarn，Spark，Impala，Hive，
Flume，Zookeeper和Kafka。对于整个业务管理数据的组织（例如Facebook或LinkedIn），Hadoop可能是一个明智的选择。但是，对于许多客户而言，最好避
免使用支持数据库解决方案的分析平台。即使是大规模的MPP解决方案，部署和维护也比Hadoop简单得多。
不成熟的查询工具：关系数据库管理系统包括数十年的自动查询调优经验，可以高效地执行复杂的SQL查询。但是，大多数基于Hadoop的SQL工具都没有达到所需
的复杂程度，并且通常依赖暴力来执行查询。这导致机器资源的低效使用，基于云的（按需付费）基础可能很快变得昂贵。
小文件问题：虽然非常大的数据处理的吞吐量在并行完全执行时可以是高效的，但是处理相对较小的文件会导致非常差的查询响应时间。
数据混洗：与MPP解决方案不同，MPP解决方案的数据可以通过一致的散列密钥或数据复制来共存，因此没有选项可以在Hadoop节点上放置数据。这意味着跨多个
表的连接操作（按设计）在整个群集中随机分布，可能导致大规模的数据重组和可能出现严重的性能问题。这在下图中说明。
低延迟查询性能差：虽然数据缓存解决方案可能有所帮助，但Hadoop / HDFS对于低延迟查询来说是一个非常糟糕的解决方案，例如，将数据提供给仪表板。同样，
这与主要设计为使用强力批处理服务非常大的数据集的体系结构有关。
其他缺点：与MPP平台中描述的缺点类似，此解决方案缺乏弹性，无法扩展，以及计算资源极度过剩的可能性，尤其是在用作Data Lake时。
关于为什么Hadoop是一个不适合市场的解决方案的优秀演讲，请观看图灵奖章获得者Michael Stonebraker博士的讲座 -  大数据（至少）有四个不同的问题。

选项4：EPP：弹性并行处理
类似于MPP解决方案，其中许多独立运行的无共享节点并行存储和处理查询，EPP（弹性并行处理）架构提供了令人印象深刻的可伸缩性水平。

但是，与数据存储直接连接到每个节点的MPP集群不同，EPP架构将计算和存储分开，这意味着每个节点可以独立缩放或弹性缩小。

如下图所示：

在上图中，长期存储由存储服务提供，该存储服务 从群集中的每个节点都可见。查询将提交给服务层，服务层 负责整体查询协调，查询调优和事务管理，
并在计算层上执行实际工作-  实际上是MPP集群。

虽然计算层通常直接连接磁盘或快速SSD用于本地存储，但使用独立存储服务层意味着数据存储可以独立于计算容量进行扩展。这意味着可以弹性调整计算
群集的大小，提供MPP架构的所有优势，同时在很大程度上消除了许多缺点。

截至2018年，有几个分析平台（在不同程度上）可以被描述为支持弹性并行处理，其中包括来自Snowflake Computing，Microsoft，HP，Amazon和Google
的解决方案。
